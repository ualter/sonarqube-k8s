apiVersion: v1
kind: ConfigMap
metadata:
  name: sonar-config
  namespace: sonar
  labels:
    app: sonar
data:
  SONARQUBE_JDBC_URL: "jdbc:postgresql://postgres:5432/sonar_db"
  SONARQUBE_JDBC_USERNAME: "sonar_user"
  SONARQUBE_JDBC_PASSWORD: "S0N4RQUB3"
  JAVA_OPTS: "-Duser.timezone=Asia/Jakarta -Xmx2048m"

---

apiVersion: v1
kind: Service
metadata:
  name: sonar
  namespace: sonar
  labels:
    app: sonar
spec:
  ports:
  - port: 9000
    name: http
  selector:
    app: sonar

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonar
  namespace: sonar
  labels:
    app: sonar
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: sonar
  template:
    metadata:
      labels:
        app: sonar
    spec:
      # initContainers:
      # - name: init
      #   image: 054819306458.dkr.ecr.eu-central-1.amazonaws.com/tools/busybox-curl:latest
      #   command:
      #   - sysctl
      #   - -w
      #   - vm.max_map_count=262144
      #   imagePullPolicy: IfNotPresent
      #   securityContext:
      #     privileged: false
      containers:
      - name: sonarqube
        image: 054819306458.dkr.ecr.eu-central-1.amazonaws.com/tools/sonarqube:8.9.1-community
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        envFrom:
        - configMapRef:
            name: sonar-config
        volumeMounts:
        - name: app-pvc
          mountPath: "/opt/sonarqube/data/"
          subPath: data
        - name: app-pvc
          mountPath: "/opt/sonarqube/extensions/"
          subPath: extensions
        resources:
          requests:
            memory: "1024Mi"
          limits:
            memory: "2048Mi"
            cpu: "500m"
      volumes:
      - name: app-pvc
        persistentVolumeClaim:
          claimName: sonar-pvc
---